@using Ganss.Xss;
@using Markdig;


@HtmlContent


@code {

    #region locals and such

    private string _content;
    public MarkupString HtmlContent { get; private set; }

    #endregion

    #region injects - HtmlSanitizer

    [Inject]
    public IHtmlSanitizer HtmlSanitizer { get; set; }

    #endregion

    #region params - Content

    [Parameter]
    public string Content {
        get => _content;
        set {
            _content = value;
            HtmlContent = ConvertStringToMarkupString(_content);
        }
    }
    #endregion

    #region private helpers - ConvertStringToMarkupString

    private MarkupString ConvertStringToMarkupString(string value)
    {
        if (!string.IsNullOrWhiteSpace(_content))
        {
            // Convert markdown string to HTML
            var html = Markdig.Markdown.ToHtml(value, new MarkdownPipelineBuilder().UseAdvancedExtensions().Build());

            // Sanitize HTML before rendering
            var sanitizedHtml = HtmlSanitizer.Sanitize(html);

            // Return sanitized HTML as a MarkupString that Blazor can render
            return new MarkupString(sanitizedHtml);
        }

        return new MarkupString();
    }

    #endregion

}
